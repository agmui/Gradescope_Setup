rules:
  - id: mutex
    languages:
      - c
    message: test
    pattern: pthread_mutex_t $MUTEX;
    severity: INFO

  - id: condition var
    languages:
      - c
    message: test4
    pattern: pthread_cond_t $COND_VAR;
    severity: INFO

  - id: mutex init
    languages:
      - c
    message: test2
    pattern-either:
      - pattern: pthread_mutex_init(&$MUTEX, 0);
      - pattern: $MUTEX = PTHREAD_MUTEX_INITIALIZER;
    severity: INFO

  - id: thread function
    languages:
      - c
    message: test3 # TODO:
    patterns:
      - pattern: |
          void *thread(void *arg) {
            ...
            pthread_mutex_lock(&$MUTEX);
            while($THREAD_NUM>2){
              pthread_cond_wait(&$COND_VAR,&$MUTEX);
            }
            $THREAD_NUM++;
            pthread_mutex_unlock(&$MUTEX);
            ...
            sleep(1);
            pthread_mutex_lock(&$MUTEX);
            $THREAD_NUM--;
            pthread_mutex_unlock(&$MUTEX);
            ...
            pthread_cond_signal(&$COND_VAR);
            ...
          }

    severity: INFO
